/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AdminSignupImport } from './routes/admin/signup'
import { Route as AdminAdminauthImport } from './routes/admin/_adminauth'

// Create Virtual Routes

const AdminImport = createFileRoute('/admin')()
const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()
const AdminAdminauthIndexLazyImport = createFileRoute('/admin/_adminauth/')()

// Create/Update Routes

const AdminRoute = AdminImport.update({
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const AdminSignupRoute = AdminSignupImport.update({
  path: '/signup',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAdminauthRoute = AdminAdminauthImport.update({
  id: '/_adminauth',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAdminauthIndexLazyRoute = AdminAdminauthIndexLazyImport.update({
  path: '/',
  getParentRoute: () => AdminAdminauthRoute,
} as any).lazy(() =>
  import('./routes/admin/_adminauth/index.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminImport
      parentRoute: typeof rootRoute
    }
    '/admin/_adminauth': {
      id: '/admin/_adminauth'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminAdminauthImport
      parentRoute: typeof AdminRoute
    }
    '/admin/signup': {
      id: '/admin/signup'
      path: '/signup'
      fullPath: '/admin/signup'
      preLoaderRoute: typeof AdminSignupImport
      parentRoute: typeof AdminImport
    }
    '/admin/_adminauth/': {
      id: '/admin/_adminauth/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AdminAdminauthIndexLazyImport
      parentRoute: typeof AdminAdminauthImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  AboutLazyRoute,
  AdminRoute: AdminRoute.addChildren({
    AdminAdminauthRoute: AdminAdminauthRoute.addChildren({
      AdminAdminauthIndexLazyRoute,
    }),
    AdminSignupRoute,
  }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/admin"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/admin": {
      "filePath": "admin",
      "children": [
        "/admin/_adminauth",
        "/admin/signup"
      ]
    },
    "/admin/_adminauth": {
      "filePath": "admin/_adminauth.tsx",
      "parent": "/admin",
      "children": [
        "/admin/_adminauth/"
      ]
    },
    "/admin/signup": {
      "filePath": "admin/signup.tsx",
      "parent": "/admin"
    },
    "/admin/_adminauth/": {
      "filePath": "admin/_adminauth/index.lazy.tsx",
      "parent": "/admin/_adminauth"
    }
  }
}
ROUTE_MANIFEST_END */
